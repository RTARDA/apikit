<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
      xmlns:test="http://www.mulesoft.org/schema/mule/test"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd
        http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd">

    <configuration defaultErrorHandler-ref="defaultErrorHandler"/>

    <error-handler name="defaultErrorHandler">
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]">
            <set-variable variableName="httpStatus" value="404"/>
            <set-payload value="resource not found"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]">
            <set-variable variableName="httpStatus" value="405"/>
            <set-payload value="method not allowed"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.UnsupportedMediaTypeException)]">
            <set-variable variableName="httpStatus" value="415"/>
            <set-payload value="unsupported media type"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]">
            <set-variable variableName="httpStatus" value="406"/>
            <set-payload value="not acceptable"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.BadRequestException)]">
            <set-variable variableName="httpStatus" value="400"/>
            <set-payload value="bad request"/>
        </on-error-propagate>
        <on-error-propagate>
            <set-variable variableName="httpStatus" value="500"/>
            <set-payload value="Server error" mimeType="text/plain"/>
        </on-error-propagate>
    </error-handler>

    <httpn:listener-config name="httpListenerConfigDefault">
        <httpn:listener-connection host="0.0.0.0" port="${serverPort}"/>
    </httpn:listener-config>

    <apikit:config name="leaguesApi" raml="org/mule/module/apikit/leagues/leagues.yaml" consoleEnabled="true"
                   consolePath="console"/>

    <flow name="doorway" processingStrategy="non-blocking">
        <httpn:listener config-ref="httpListenerConfigDefault" path="/api/*">
            <httpn:response-builder statusCode="#[httpStatus]"><httpn:headers>#[_outboundHeaders_]</httpn:headers></httpn:response-builder>
            <httpn:error-response-builder statusCode="#[httpStatus]"/>
        </httpn:listener>
        <set-variable variableName="_outboundHeaders_" value="#[new java.util.HashMap()]"/>
        <apikit:router/>
        <test:non-blocking-processor />
        <set-property propertyName="next" value="ok"/>
    </flow>

    <flow name="console">
        <httpn:listener config-ref="httpListenerConfigDefault" path="/console/*">
            <httpn:response-builder statusCode="#[httpStatus]"><httpn:headers>#[_outboundHeaders_]</httpn:headers></httpn:response-builder>
            <httpn:error-response-builder statusCode="#[httpStatus]"/>
        </httpn:listener>
        <set-variable variableName="_outboundHeaders_" value="#[new java.util.HashMap()]"/>
        <apikit:console config-ref="leaguesApi"/>
    </flow>
    <flow name="get:/leagues">
        <set-payload value="#[registry:list-of-leagues]"/>
    </flow>

    <flow name="post:/leagues">
        <custom-transformer class="org.mule.module.apikit.transform.PayloadNormalizerTransformer"
                            returnClass="org.mule.module.apikit.leagues.League"/>
        <choice>
            <when expression="#[!payload.name.matches('[\\w ]+')]">
                <set-property propertyName="http.status" value="400"/>
                <set-payload value="Invalid League Name"/>
            </when>
            <otherwise>
                <set-property propertyName="Location"
                              value="http://localhost:${serverPort}/api/leagues/#[app.registry['list-of-leagues'].getLeagues().size() + 1]"/>
                <expression-component>
                    payload.id = message.getAttributes().getHeader('Location');
                    app.registry['list-of-leagues'].getLeagues().add(payload);
                </expression-component>
                <set-payload value="#[payload.description]" mimeType="text/plain" encoding="windows-1252"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="get:/leagues/{leagueId}">
        <logger level="WARN" message="leagueId: #[leagueId]"/>
        <choice>
            <when expression="#[app.registry['list-of-leagues'].getLeague(leagueId)]">
                <set-payload value="#[app.registry['list-of-leagues'].getLeague(leagueId)]"/>
            </when>
            <otherwise>
                <set-property propertyName="http.status" value="404"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="put:/leagues/{leagueId}">
        <custom-transformer class="org.mule.module.apikit.transform.PayloadNormalizerTransformer"
                            returnClass="org.mule.module.apikit.leagues.League"/>
        <choice>
            <when expression="#[!payload.name.matches('[\\w ]+')]">
                <logger level="WARN" message="invalid name returning 400"/>
                <set-property propertyName="http.status" value="400"/>
                <set-payload value=""/>
            </when>
            <otherwise>
                <expression-component>
                    league = app.registry['list-of-leagues'].getLeague(leagueId);
                    league.name = payload.name;
                </expression-component>
                <set-payload value="#[org.mule.transport.NullPayload.getInstance()]"/>
            </otherwise>
        </choice>
    </flow>

    <flow name="delete:/leagues/{leagueId}">
        <expression-component>
            app.registry['list-of-leagues'].deleteLeague(leagueId)
        </expression-component>
    </flow>

    <flow name="get:/leagues/{leagueId}/teams">
        <expression-component>
            teams = app.registry['list-of-leagues'].getLeagues().get(leagueId).getTeams();
            int from = Integer.valueOf(message.getAttributes().getQueryParams()['offset']);
            to = Math.min(Integer.valueOf(message.getAttributes().getQueryParams()['limit']), teams.size());
            payload = teams.subList(from, to);
        </expression-component>
        <set-property propertyName="preferred-team" value="#[message.inboundProperties.preferred]"/>
    </flow>

    <flow name="put:/leagues/{leagueId}/badge">
        <set-variable variableName="mp1"
                      value="#[org.mule.util.IOUtils.toString(message.inboundAttachments['description'].getDataSource().getInputStream())]"/>
        <set-variable variableName="mp2"
                      value="#[message.inboundAttachments['image'].getDataSource().getPart().getContentDispositionFilename()]"/>
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;upload&quot;: &quot;OK&quot; }"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/badge">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;name&quot;: &quot;Liga BBVA&quot; }"/>
    </flow>

    <flow name="get:/leagues/{leagueId}/teams/leader">
        <set-property propertyName="Content-Type" value="application/json"/>
        <set-payload value="{ &quot;name&quot;: &quot;Aleti&quot; }"/>
    </flow>

    <spring:beans>
        <spring:bean id="liga-bbva" class="org.mule.module.apikit.leagues.League">
            <spring:property name="id" value="liga-bbva"/>
            <spring:property name="name" value="Liga BBVA"/>
            <spring:property name="federation" ref="spanish-federation"/>
            <spring:property name="teams">
                <spring:list>
                    <spring:ref bean="real-madrid"/>
                    <spring:ref bean="barcelona"/>
                    <spring:ref bean="valencia"/>
                    <spring:ref bean="athletic-bilbao"/>
                    <spring:ref bean="atletico-madrid"/>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="spanish-federation" class="org.mule.module.apikit.leagues.Federation">
            <spring:property name="name" value="Real Federacion Espanola de Futbol"/>
            <spring:property name="year" value="1909"/>
        </spring:bean>
        <spring:bean id="premier-league" class="org.mule.module.apikit.leagues.League">
            <spring:property name="id" value="premier-league"/>
            <spring:property name="name" value="Premier League"/>
            <spring:property name="federation" ref="english-federation"/>
            <spring:property name="teams">
                <spring:list>
                    <spring:ref bean="man-united"/>
                    <spring:ref bean="man-city"/>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="league-one" class="org.mule.module.apikit.leagues.League">
            <spring:property name="id" value="league+one"/>
            <spring:property name="name" value="League One"/>
        </spring:bean>
        <spring:bean id="english-federation" class="org.mule.module.apikit.leagues.Federation">
            <spring:property name="name" value="Football Association"/>
            <spring:property name="year" value="1863"/>
        </spring:bean>
        <spring:bean id="list-of-leagues" class="org.mule.module.apikit.leagues.Leagues">
            <spring:property name="leagues">
                <spring:list>
                    <spring:ref bean="liga-bbva"/>
                    <spring:ref bean="premier-league"/>
                    <spring:ref bean="league-one"/>
                </spring:list>
            </spring:property>
        </spring:bean>
        <spring:bean id="real-madrid" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="real-madrid"/>
            <spring:property name="name" value="Real Madrid"/>
        </spring:bean>
        <spring:bean id="barcelona" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="barcelona"/>
            <spring:property name="name" value="Barcelona"/>
        </spring:bean>
        <spring:bean id="valencia" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="valencia"/>
            <spring:property name="name" value="Valencia"/>
        </spring:bean>
        <spring:bean id="athletic-bilbao" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="athletic-bilbao"/>
            <spring:property name="name" value="Athletic Bilbao"/>
        </spring:bean>
        <spring:bean id="atletico-madrid" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="atletico-madrid"/>
            <spring:property name="name" value="Atletico Madrid"/>
        </spring:bean>
        <spring:bean id="man-united" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="man-united"/>
            <spring:property name="name" value="Manchester United"/>
        </spring:bean>
        <spring:bean id="man-city" class="org.mule.module.apikit.leagues.Team">
            <spring:property name="id" value="man-city"/>
            <spring:property name="name" value="Manchester City"/>
        </spring:bean>
    </spring:beans>
</mule>
