<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
      http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd
      http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <configuration defaultErrorHandler-ref="defaultErrorHandler"/>

    <error-handler name="defaultErrorHandler">
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]">
            <set-variable variableName="httpStatus" value="404"/>
            <set-payload value="resource not found"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]">
            <set-variable variableName="httpStatus" value="405"/>
            <set-payload value="method not allowed"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.UnsupportedMediaTypeException)]">
            <set-variable variableName="httpStatus" value="415"/>
            <set-payload value="unsupported media type"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]">
            <set-variable variableName="httpStatus" value="406"/>
            <set-payload value="not acceptable"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.BadRequestException)]">
            <set-variable variableName="httpStatus" value="400"/>
            <set-payload value="bad request"/>
        </on-error-propagate>
        <on-error-propagate>
            <set-variable variableName="httpStatus" value="500"/>
            <set-payload value="Server error" mimeType="text/plain"/>
        </on-error-propagate>
    </error-handler>

    <apikit:config name="filterApi" raml="org/mule/module/apikit/filters/filter.raml" consoleEnabled="false"/>

    <httpn:listener-config name="httpListenerConfig">
        <httpn:listener-connection host="localhost" port="${serverPort}"/>
    </httpn:listener-config>

    <flow name="doorway">
        <httpn:listener config-ref="httpListenerConfig" path="/api/*">
            <httpn:response-builder statusCode="#[mel:httpStatus]"><httpn:headers>#[mel:_outboundHeaders_]</httpn:headers></httpn:response-builder>
            <!--TODO error-response-builder fails when using #[mel:httpStatus]-->
            <httpn:error-response-builder statusCode="500"/>
        </httpn:listener>
        <set-variable variableName="_outboundHeaders_" value="#[mel:new java.util.HashMap()]"/>
        <message-filter throwOnUnaccepted="true">
            <regex-filter pattern="x"/>
        </message-filter>
        <set-payload value="not filtered"/>

        <!--<apikit:router/>-->
    </flow>

    <flow name="put:/some">
        <regex-filter pattern="x"/>
        <set-payload value="not filtered"/>
    </flow>

    <flow name="put:/throw">
        <message-filter throwOnUnaccepted="true">
            <regex-filter pattern="x"/>
        </message-filter>
        <set-payload value="not filtered"/>
    </flow>

</mule>
