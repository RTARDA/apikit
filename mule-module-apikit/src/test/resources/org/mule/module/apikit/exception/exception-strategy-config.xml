<?xml version="1.0" encoding="UTF-8"?>
<mule
    xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
    xmlns:http="http://www.mulesoft.org/schema/mule/http"
    xmlns:test="http://www.mulesoft.org/schema/mule/test"
    xmlns:spring="http://www.springframework.org/schema/beans"
    xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
    xmlns:ss="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
    http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
    http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
    http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/current/mule-test.xsd
    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
    http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-current.xsd">

    <configuration defaultErrorHandler-ref="defaultErrorHandler"/>

    <error-handler name="defaultErrorHandler">
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]">
            <set-variable variableName="httpStatus" value="404"/>
            <set-payload value="resource not found"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]">
            <set-variable variableName="httpStatus" value="405"/>
            <set-payload value="method not allowed"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.UnsupportedMediaTypeException)]">
            <set-variable variableName="httpStatus" value="415"/>
            <set-payload value="unsupported media type"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]">
            <set-variable variableName="httpStatus" value="406"/>
            <set-payload value="not acceptable"/>
        </on-error-propagate>
        <on-error-propagate when="#[mel:exception.causedBy(org.mule.module.apikit.exception.BadRequestException)]">
            <set-variable variableName="httpStatus" value="400"/>
            <set-payload value="bad request"/>
        </on-error-propagate>
        <on-error-propagate>
            <set-variable variableName="httpStatus" value="500"/>
            <set-payload value="Server error" mimeType="text/plain"/>
        </on-error-propagate>
    </error-handler>
    <apikit:config raml="org/mule/module/apikit/exception/exception.yaml" />

    <flow name="userStatusOnException">
        <http:inbound-endpoint address="http://localhost:${serverPort}/api"/>
        <set-property propertyName="http.status" value="410"/>
        <test:component throwException="true" />
        <apikit:router />
    </flow>

    <spring:beans>
        <ss:authentication-manager alias="example-authentication-manager">
            <ss:authentication-provider>
                <ss:user-service id="userService">
                    <ss:user name="admin" password="admin" authorities="ROLE_ADMIN"/>
                </ss:user-service>
            </ss:authentication-provider>
        </ss:authentication-manager>
    </spring:beans>

    <mule-ss:security-manager>
        <mule-ss:delegate-security-provider name="example-security-provider" delegate-ref="example-authentication-manager" />
    </mule-ss:security-manager>

    <flow name="muleMappedStatusException">
        <http:inbound-endpoint address="http://localhost:${serverPort}/mule"/>
        <mule-ss:http-security-filter realm="mule-realm" />
        <apikit:router />
    </flow>

    <flow name="get:/resources">
        <set-payload value="none" />
    </flow>

</mule>

