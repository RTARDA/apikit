<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:apikit="http://www.mulesoft.org/schema/mule/apikit"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
      http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd
      http://www.mulesoft.org/schema/mule/apikit http://www.mulesoft.org/schema/mule/apikit/current/mule-apikit.xsd
      http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">

    <configuration defaultErrorHandler-ref="defaultErrorHandler"/>

    <apikit:config name="router-config" raml="org/mule/module/apikit/contenttype/content-routing.yaml"
                   consoleEnabled="false">
        <apikit:flow-mapping resource="/leagues" action="post" content-type="application/json" flow-ref="post-leagues-json"/>
        <apikit:flow-mapping resource="/leagues" action="post" content-type="application/xml" flow-ref="post-leagues-xml"/>
        <apikit:flow-mapping resource="/leagues/{leagueId}" action="get" flow-ref="get-leagueId"/>
        <apikit:flow-mapping resource="/leagues/{leagueId}" action="put" flow-ref="put-leagueId"/>
    </apikit:config>

    <httpn:listener-config name="httpListenerConfigDefault">
        <httpn:listener-connection host="localhost" port="${serverPort}"/>
    </httpn:listener-config>


    <flow name="doorway">
        <httpn:listener config-ref="httpListenerConfigDefault" path="/api/*">
            <httpn:response-builder statusCode="#[httpStatus]"><httpn:headers>#[_outboundHeaders_]</httpn:headers></httpn:response-builder>
            <httpn:error-response-builder statusCode="#[httpStatus]"/>
        </httpn:listener>
        <set-variable variableName="_outboundHeaders_" value="#[new java.util.HashMap()]"/>
        <apikit:router/>
    </flow>

    <flow name="console">
        <httpn:listener config-ref="httpListenerConfigDefault" path="/console/*">
            <httpn:response-builder statusCode="#[httpStatus]"><httpn:headers>#[_outboundHeaders_]</httpn:headers></httpn:response-builder>
            <httpn:error-response-builder statusCode="#[httpStatus]"/>
        </httpn:listener>
        <set-variable variableName="_outboundHeaders_" value="#[new java.util.HashMap()]"/>
        <apikit:console/>
    </flow>


    <flow name="post-leagues-json">
        <expression-component>flowVars['_outboundHeaders_'].put('incoming-content-type', 'application/json')</expression-component>

        <!--<set-property propertyName="incoming-content-type" value="application/json"/>-->
    </flow>

    <flow name="post-leagues-xml">
        <expression-component>flowVars['_outboundHeaders_'].put('incoming-content-type', 'application/xml')</expression-component>

        <!--<set-property propertyName="incoming-content-type" value="application/xml"/>-->
    </flow>

    <flow name="get-leagueId">
        <set-payload value="leagueId: #[leagueId]"/>
    </flow>

    <flow name="put-leagueId">
        <expression-component>flowVars['_outboundHeaders_'].put('incoming-content-type', message.getAttributes().getHeaders()['content-type'])</expression-component>

        <!--<set-property propertyName="incoming-content-type" value="#[message.getAttributes().getHeaders()['content-type']]"/>-->
    </flow>

    <error-handler name="defaultErrorHandler">
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.NotFoundException)]">
            <set-variable variableName="httpStatus" value="404"/>
            <set-payload value="resource not found"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.MethodNotAllowedException)]">
            <set-variable variableName="httpStatus" value="405"/>
            <set-payload value="method not allowed"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.UnsupportedMediaTypeException)]">
            <set-variable variableName="httpStatus" value="415"/>
            <set-payload value="unsupported media type"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.NotAcceptableException)]">
            <set-variable variableName="httpStatus" value="406"/>
            <set-payload value="not acceptable"/>
        </on-error-propagate>
        <on-error-propagate when="#[exception.causedBy(org.mule.module.apikit.exception.BadRequestException)]">
            <set-variable variableName="httpStatus" value="400"/>
            <set-payload value="bad request"/>
        </on-error-propagate>
        <on-error-propagate>
            <set-variable variableName="httpStatus" value="500"/>
            <set-payload value="Server error" mimeType="text/plain"/>
        </on-error-propagate>
    </error-handler>

</mule>
